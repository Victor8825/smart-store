@mixin font($fw, $fs, $lh, $ls) {
  font-weight: $fw;
  font-size: $fs;
  line-height: calc($lh / $fs);
  letter-spacing: $ls;
}

@mixin mob {
  @media screen and (min-width: 375px) {
    @content;
  }
}

@mixin desk {
  @media screen and (min-width: 768px) {
    @content;
  }
}

@mixin till_desk {
  @media screen and (max-width: 767px) {
    @content;
  }
}

@mixin retina {
  @media screen and (min-device-pixel-ratio: 2),
    screen and (min-resolution: 192dpi),
    screen and (min-resolution: 2dppx) {
    @content;
  }
}
//change px tp percent
@function prc($pxOne, $pxTwo) {
  $result: math.div($pxOne, $pxTwo) * 100%;
  @return $result;
}

// change px to rem
@function rem($px) {
  $result: math.div($px, 16) + rem;
  @return $result;
}

// change px to em
@function em($px) {
  $result: math.div($px, 16) + em;
  @return $result;
}

//adaptive change of any css-property according to VW

@mixin adaptiv-value($property, $startSize, $minSize, $type) {
  $addSize: $startSize - $minSize;

  @if $type == 1 {
    //Только если меньше контейнера
    #{$property}: $startSize + px;
    @media (max-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(
        #{$minSize + px} + #{$addSize} *
          ((100vw - 768px) / #{$maxWidthContainer - 768})
      );
    }
  } @else if $type == 2 {
    //ТОлько если больше контейнера
    #{$property}: $startSize + px;
    @media (min-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(
        #{$minSize + px} + #{$addSize} * ((100vw - 768px) / #{$maxWidth - 768})
      );
    }
  } @else {
    //Всегда
    #{$property}: calc(
      #{$minSize + px} + #{$addSize} * ((100vw - 768px) / #{$maxWidth - 768})
    );
  }
}
